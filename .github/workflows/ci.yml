on: [push, pull_request]

name: Continuous integration

env:
  CI: 1
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  RUSTFLAGS: "-D warnings -W bare-trait-objects"
  NIGHTLY_VERSION: "nightly-2025-08-18"
  ZIG_VERSION: "0.14.1"

jobs:
  all:
    name: Build on ${{ matrix.os }}, ${{ matrix.target }} (audit=${{ matrix.audit || 'false' }}, rustfmt=${{ matrix.rustfmt || 'false' }}, no_build_tests=${{ matrix.no_build_tests || 'false' }}, no_run_tests=${{ matrix.no_run_tests || 'false' }}, no_release_build=${{ matrix.no_release_build || 'false' }}, zigbuild=${{ matrix.zigbuild || 'false' }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # GNU/Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            audit: true
            rustfmt: true
            vint: true
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
            no_build_tests: true # NOTE: ld: cannot find Scrt1.o: No such file or directory
            no_release_build: true # NOTE: ld: cannot find Scrt1.o: No such file or directory
            #zigbuild: true # NOTE: Failed to read build.zig.zon (using latest): Error: ENOENT: no such file or directory, open 'build.zig.zon'
          - os: ubuntu-latest
            target: riscv64gc-unknown-linux-gnu
            no_build_tests: true # NOTE: Relocations in generic ELF (EM: 243)
            no_release_build: true # NOTE: Relocations in generic ELF (EM: 243)
            #zigbuild: true # NOTE: tests linking fail with "error: unknown directive .cfi_label .Ldummy"
          # - os: ubuntu-latest
          #   target: i686-unknown-linux-musl # NOTE: target 'i686-unknown-linux-musl' not found in channel
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            no_build_tests: true
            no_release_build: true # NOTE: Relocations in generic ELF (EM: 183)
            #zigbuild: true # NOTE: Failed to read build.zig.zon (using latest): Error: ENOENT: no such file or directory, open 'build.zig.zon'
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            no_build_tests: true # NOTE: Relocations in generic ELF (EM: 183)
            no_release_build: true # NOTE: Relocations in generic ELF (EM: 183)
            #zigbuild: true # NOTE: Failed to read build.zig.zon (using latest): Error: ENOENT: no such file or directory, open 'build.zig.zon'
          # - os: ubuntu-latest
          #   target: riscv64gc-unknown-linux-musl # NOTE: error: target 'riscv64gc-unknown-linux-musl' not found in channel.

          # macOS
          - os: macos-latest
            target: x86_64-apple-darwin
            audit: true
          - os: macos-latest
            target: aarch64-apple-darwin
            audit: true

          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-gnu
          #- os: windows-latest
          #  target: x86_64-pc-windows-gnu
          #  zigbuild: true # NOTE: failed to link with LLD: UnableToWriteArchive
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: i686-pc-windows-msvc
          - os: windows-latest
            target: i686-pc-windows-gnu
            no_build_tests: true # NOTE: error: linker `i686-w64-mingw32-gcc` not found
            no_release_build: true # NOTE: error: linker `i686-w64-mingw32-gcc` not found
            #zigbuild: true # NOTE: lld-link: error: undefined symbol: ___register_frame_info
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            no_build_tests: true # NOTE: could not execute process
            #zigbuild: true # NOTE: tests linking fails with "zig.exe: InvalidUtf8 error: UnableToSpawnSelf"
          # - os: windows-latest
          #   target: aarch64-pc-windows-gnullvm # NOTE: can't find crate for `core`

          # FreeBSD
          - os: ubuntu-latest
            target: x86_64-unknown-freebsd
            audit: true
            no_build_tests: true # NOTE: ld: cannot find -lexecinfo: No such file or directory
            no_release_build: true # NOTE: ld: cannot find -lexecinfo: No such file or directory
            #zigbuild: true # NOTE: tests linking fails "unsupported target 'x86_64-unknown-freebsd'"
          # - os: ubuntu-latest
          #   target: i686-unknown-freebsd # NOTE: target 'i686-unknown-freebsd' not found in channel
          # - os: ubuntu-latest
          #   target: aarch64-unknown-freebsd # NOTE: toolchain ... does not support target 'aarch64-unknown-freebsd'
          # - os: ubuntu-latest
          #   target: riscv64gc-unknown-freebsd # NOTE: toolchain ... does not support target 'riscv64gc-unknown-freebsd'

          # NetBSD
          - os: ubuntu-latest
            target: x86_64-unknown-netbsd
            audit: true
            no_build_tests: true # NOTE: ld: cannot find -lexecinfo: No such file or directory
            no_release_build: true # NOTE: ld: cannot find -lexecinfo: No such file or directory
            #zigbuild: true # NOTE: tests linking fails "Error: unsupported target 'x86_64-unknown-netbsd'"
          # - os: ubuntu-latest
          #   target: i686-unknown-netbsd # NOTE: toolchain ... does not support target 'i686-unknown-netbsd'
          # - os: ubuntu-latest
          #   target: aarch64-unknown-netbsd # NOTE: toolchain ... does not support target 'aarch64-unknown-netbsd'
          # - os: ubuntu-latest
          #   target: aarch64_be-unknown-netbsd # NOTE: toolchain ... does not support target 'aarch64_be-unknown-netbsd'
          # - os: ubuntu-latest
          #   target: riscv64gc-unknown-netbsd # NOTE: toolchain ... does not support target 'riscv64gc-unknown-netbsd'

          # OpenBSD
          # - os: ubuntu-latest
          #   target: x86_64-unknown-openbsd # NOTE: toolchain ... does not support target 'x86_64-unknown-openbsd'
          # - os: ubuntu-latest
          #   target: i686-unknown-openbsd # NOTE: toolchain ... does not support target 'i686-unknown-openbsd'
          # - os: ubuntu-latest
          #   target: aarch64-unknown-openbsd # NOTE: toolchain ... does not support target 'aarch64-unknown-openbsd'
          # - os: ubuntu-latest
          #   target: riscv64gc-unknown-openbsd # NOTE: toolchain ... does not support target 'riscv64gc-unknown-openbsd'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Install Rust toolchain
        run: |
          rustup update --no-self-update
          rustup target add ${{ matrix.target }}
          rustup install --force-non-host $(cat rust-toolchain)-${{ matrix.target }}
          rustup default --force-non-host $(cat rust-toolchain)-${{ matrix.target }}
          rustup component add clippy rust-src
      - name: Install Nightly and Rustfmt
        if: ${{ matrix.rustfmt }}
        run: |
          rustup install "${NIGHTLY_VERSION}"
          rustup component add --toolchain "${NIGHTLY_VERSION}" rustfmt
      - name: Install Zig
        if: ${{ matrix.zigbuild }}
        uses: mlugg/setup-zig@v2
        with:
          zig-version: ${{ env.ZIG_VERSION }}
      - run: zig version
        if: ${{ matrix.zigbuild }}
      - name: Install Zigbuild
        if: ${{ matrix.zigbuild }}
        run: cargo install --locked cargo-zigbuild
      - name: Install Vint
        if: ${{ matrix.vint }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - if: ${{ matrix.vint }}
        run: |
          pip install --user git+https://github.com/Vimjas/vint.git@94d2cb3fd9526a89911b7c1e083a1fd78bace729
          patch -p1 ~/.local/lib/python3*/site-packages/vint/ast/plugin/scope_plugin/identifier_classifier.py vint-const.patch
      - name: Run Vint
        if: ${{ matrix.vint }}
        run: vint plugin/cargo-limit.vim
      - name: Install cargo-audit
        if: ${{ matrix.audit }}
        run: cargo install --locked cargo-audit
      - name: Check vulnerabilities with existing patches
        if: ${{ matrix.audit }}
        run: |
          ISSUES_WITHOUT_PATCHES=($(cargo audit --json | jq --raw-output '.vulnerabilities.list[] | select(.versions.patched | length == 0) | .advisory.id' | sed 's!^! --ignore !' | tr -d '\n'))
          cargo audit ${ISSUES_WITHOUT_PATCHES[@]}
      - name: Run Rustfmt
        if: ${{ matrix.rustfmt }}
        run: cargo "+${NIGHTLY_VERSION}" fmt --all -- --check
      - name: Check
        run: cargo check --locked --verbose --all-features --target=${{ matrix.target }}
      - name: Clippy
        run: cargo clippy -- -D warnings -D clippy::dbg_macro -D clippy::print_stderr -D clippy::print_stdout
      - name: Build Tests
        if: ${{ !matrix.no_build_tests && !matrix.zigbuild }}
        run: cargo test --no-run --locked --verbose --all-features --target=${{ matrix.target }}
      - name: Zigbuild Tests
        if: ${{ !matrix.no_build_tests && matrix.zigbuild }}
        run: cargo zigbuild --tests --locked --verbose --all-features --target=${{ matrix.target }}
      - name: Build Release
        if: ${{ !matrix.no_release_build && !matrix.zigbuild }}
        run: cargo build --locked --verbose --all-features --release --target=${{ matrix.target }}
      - name: Zigbuild Release
        if: ${{ !matrix.no_release_build && matrix.zigbuild }}
        run: cargo zigbuild --locked --verbose --all-features --release --target=${{ matrix.target }}
      - name: Run Tests
        if: ${{ !matrix.no_build_tests && !matrix.no_run_tests && !matrix.zigbuild && !matrix.no_release_build }}
        run: cargo test --locked --verbose --all-features --target=${{ matrix.target }} -- --nocapture
